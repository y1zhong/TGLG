% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TGLG_binary.R
\name{TGLG_binary}
\alias{TGLG_binary}
\title{TGLG model fitting for binary outcome}
\usage{
TGLG_binary(
  X,
  y,
  net = NULL,
  nsim = 30000,
  ntune = 10000,
  freqTune = 100,
  nest = 10000,
  nthin = 10,
  a.alpha = 0.01,
  b.alpha = 0.01,
  a.gamma = 0.01,
  b.gamma = 0.01,
  lambda.lower = 0,
  lambda.upper = 10,
  emu = -5,
  esd = 3,
  prob_select = 0.95
)
}
\arguments{
\item{a.alpha, }{b.alpha: inverse-gamma distribution parameter for sigma_alpha}

\item{a.gamma, }{b.gamma: inverse-gamma distribution parameter for sigma_gamma}

\item{lambda.lower, }{lambda.uppper: lower and upper bound of uniform distribution for lambda}

\item{emu, }{esd: mean and standard deviation of log-normal distribution for epsilon}

\item{X:}{input features, dimension n*p, with n as sample size and p as number of features}

\item{y:}{response variable: binary 0, 1}

\item{net:}{igraph object that represents the network}

\item{nsim:}{total number of MCMC iteration}

\item{ntune:}{first number of MCMC iteration to adjust propose variance to get desired acceptance rate}

\item{freqTune:}{frequency to tune the variance term.}

\item{nest:}{number used for estimation}

\item{nthin:}{thin MCMC chain}
}
\value{
post_summary: a dataframe including the selection probablity and posterior mean of betas

dat: X, y, and net used to generate results

save_mcmc: all the mcmc samples saved after burnin and thinning.
}
\description{
TGLG model fitting for binary outcome
}
