// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// eigen_val
arma::vec eigen_val(arma::mat X);
RcppExport SEXP _TGLG_eigen_val(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(eigen_val(X));
    return rcpp_result_gen;
END_RCPP
}
// solve_tri
arma::vec solve_tri(arma::mat X, arma::vec mu);
RcppExport SEXP _TGLG_solve_tri(SEXP XSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(solve_tri(X, mu));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TGLG_eigen_val", (DL_FUNC) &_TGLG_eigen_val, 1},
    {"_TGLG_solve_tri", (DL_FUNC) &_TGLG_solve_tri, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_TGLG(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
